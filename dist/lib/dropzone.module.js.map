{"version":3,"sources":["../../src/lib/dropzone.module.ts"],"names":[],"mappings":";;AAAA,sCAA0G;AAE1G,0CAA+C;AAE/C,2DAAyD;AACzD,2DAAyD;AACzD,6DAA+E;AAElE,QAAA,cAAA,GAAiB,IAAI,qBAAA,CAAe,gBAAC,CAAgB,CAAC;AACtD,QAAA,eAAA,GAAkB,IAAI,qBAAA,CAAe,iBAAC,CAAiB,CAAC;AAGrE;IACE,wBAAe,KAAU;IAAG,CAAC;IAEtB,sBAAO,GAAd,UAAe,MAAgC;QAC7C,MAAM,CAAC;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,sBAAc;oBACvB,UAAU,EAAE,mBAAmB;oBAC/B,IAAI,EAAE;wBACJ;4BACE,oCAAc;4BACd,IAAI,eAAQ,EAAE;4BACd,IAAI,eAAQ,EAAE;yBACf;qBACF;iBACF;gBACD;oBACE,OAAO,EAAE,uBAAe;oBACxB,QAAQ,EAAE,MAAM,GAAG,MAAM,GAAG,EAAE;iBAC/B;gBACD;oBACE,OAAO,EAAE,oCAAc;oBACvB,UAAU,EAAE,oBAAoB;oBAChC,IAAI,EAAE;wBACJ,uBAAe;qBAChB;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IAEM,uBAAQ,GAAf;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,cAAc;SACzB,CAAC;IACJ,CAAC;IACI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE,CAAC,qBAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,sCAAiB,EAAE,sCAAiB,CAAC;oBACpD,OAAO,EAAE,CAAC,qBAAY,EAAE,sCAAiB,EAAE,sCAAiB,CAAC;iBAC9D,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,eAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,aAAM,EAAE,IAAI,EAAE,CAAC,sBAAc,EAAG,EAAE,EAAG,EAAC;KAChG,EAF6F,CAE7F,CAAC;IACF,qBAAC;CAjDD,AAiDC,IAAA;AAjDY,wCAAc;AAmD3B,6BAPoC,MAAQ;IAQ1C,EAAE,CAAC,CAAC,MAPC,CAAM,CAAC,CAAA;QAQV,MAPM,IAAI,KAAA,CAAM,+HAUf,CAPC,CAAC;IAQL,CAAC;IAED,MAAM,CAPC,SAAA,CAAU;AAQnB,CAAC;AATD,kDASC;AAED,8BAPqC,MAAQ;IAQ3C,MAAM,CAPC,IAAI,oCAAA,CAAe,MAAC,CAAM,CAAC;AAQpC,CAAC;AAFD,oDAEC","file":"dropzone.module.js","sourceRoot":"","sourcesContent":["import { NgModule, ModuleWithProviders, InjectionToken, Optional, SkipSelf, Inject } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DropzoneComponent } from './dropzone.component';\r\nimport { DropzoneDirective } from './dropzone.directive';\r\nimport { DropzoneConfig, DropzoneConfigInterface} from './dropzone.interfaces';\r\n\r\nexport const DROPZONE_GUARD = new InjectionToken('DROPZONE_GUARD');\r\nexport const DROPZONE_CONFIG = new InjectionToken('DROPZONE_CONFIG');\r\n\r\n\r\nexport class DropzoneModule {\r\n  constructor (  guard: any) {}\r\n\r\n  static forRoot(config?: DropzoneConfigInterface): ModuleWithProviders {\r\n    return {\r\n      ngModule: DropzoneModule,\r\n      providers: [\r\n        {\r\n          provide: DROPZONE_GUARD,\r\n          useFactory: provideForRootGuard,\r\n          deps: [\r\n            [\r\n              DropzoneConfig,\r\n              new Optional(),\r\n              new SkipSelf()\r\n            ]\r\n          ]\r\n        },\r\n        {\r\n          provide: DROPZONE_CONFIG,\r\n          useValue: config ? config : {}\r\n        },\r\n        {\r\n          provide: DropzoneConfig,\r\n          useFactory: provideDefaultConfig,\r\n          deps: [\r\n            DROPZONE_CONFIG\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DropzoneModule\r\n    };\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [CommonModule],\r\n  declarations: [DropzoneComponent, DropzoneDirective],\r\n  exports: [CommonModule, DropzoneComponent, DropzoneDirective]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DROPZONE_GUARD, ] }, ]},\n];\n}\r\n\r\nexport function provideForRootGuard(config: DropzoneConfig): any {\r\n  if (config) {\r\n    throw new Error(`\r\n      Application called DropzoneModule.forRoot() twice.\r\n      For submodules use DropzoneModule.forChild() instead.\r\n    `);\r\n  }\r\n\r\n  return 'guarded';\r\n}\r\n\r\nexport function provideDefaultConfig(config: DropzoneConfigInterface): DropzoneConfig {\r\n  return new DropzoneConfig(config);\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}