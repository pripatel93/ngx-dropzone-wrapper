{"version":3,"sources":["../../src/lib/dropzone.interfaces.ts"],"names":[],"mappings":";;AAEA,wCAAwC;AAE3B,QAAA,cAAc,GAAG;IAC5B,MAAM;IACN,WAAW;IACX,SAAS;IACT,WAAW;IACX,UAAU;IACV,WAAW;IAEX,WAAW;IACX,aAAa;IACb,WAAW;IACX,OAAO;IACP,YAAY;IACZ,gBAAgB;IAChB,SAAS;IACT,SAAS;IACT,UAAU;IACV,UAAU;IACV,iBAAiB;IACjB,kBAAkB;IAElB,oBAAoB;IACpB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAElB,qBAAqB;IACrB,OAAO;IACP,eAAe;CAChB,CAAC;AAuEF;IAmEE,wBAAY,MAAoC;QAApC,uBAAA,EAAA,WAAoC;QAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAEM,+BAAM,GAAb,UAAc,MAAoC;QAApC,uBAAA,EAAA,WAAoC;QAChD,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IACH,qBAAC;AAAD,CA5EA,AA4EC,IAAA;AA5EY,wCAAc","file":"dropzone.interfaces.js","sourceRoot":"","sourcesContent":["import * as Dropzone from 'dropzone';\r\n\r\n// http://www.dropzonejs.com/#event-list\r\n\r\nexport const DropzoneEvents = [\r\n  'drop',\r\n  'dragstart',\r\n  'dragend',\r\n  'dragenter',\r\n  'dragover',\r\n  'dragleave',\r\n\r\n  'addedfile',\r\n  'removedfile',\r\n  'thumbnail',\r\n  'error',\r\n  'processing',\r\n  'uploadprogress',\r\n  'sending',\r\n  'success',\r\n  'complete',\r\n  'canceled',\r\n  'maxfilesreached',\r\n  'maxfilesexceeded',\r\n\r\n  'processingmultiple',\r\n  'sendingmultiple',\r\n  'successmultiple',\r\n  'completemultiple',\r\n  'canceledmultiple',\r\n\r\n  'totaluploadprogress',\r\n  'reset',\r\n  'queuecomplete'\r\n];\r\n\r\nexport interface DropzoneConfigInterface {\r\n  timeout?: number,\r\n\r\n  autoReset?: number,\r\n  errorReset?: number,\r\n  cancelReset?: number,\r\n\r\n  url?: string,\r\n  method?: string,\r\n\r\n  params?: Object,\r\n  headers?: Object,\r\n\r\n  init?: any,\r\n  accept?: any,\r\n  resize?: any,\r\n  fallback?: any,\r\n  renameFile?: any,\r\n  transformFile?: any,\r\n  sending?: any,\r\n\r\n  withCredentials?: boolean,\r\n\r\n  previewsContainer?: any,\r\n  hiddenInputContainer?: any,\r\n\r\n  clickable?: string | string[] | boolean,\r\n  paramName?: string,\r\n  capture?: string,\r\n  maxFiles?: number,\r\n  maxFilesize?: number,\r\n  filesizeBase?: number,\r\n  acceptedFiles?: string,\r\n  forceFallback?: boolean,\r\n  addRemoveLinks?: boolean,\r\n  uploadMultiple?: boolean,\r\n  parallelUploads?: number,\r\n  resizeWidth?: number,\r\n  resizeHeight?: number,\r\n  resizeMethod?: string,\r\n  resizeQuality?: number,\r\n  resizeMimeType?: string,\r\n  thumbnailWidth?: number,\r\n  thumbnailHeight?: number,\r\n  thumbnailMethod?: string,\r\n  previewTemplate?: string,\r\n  autoQueue?: boolean,\r\n  autoProcessQueue?: boolean,\r\n  ignoreHiddenFiles?: boolean,\r\n  maxThumbnailFilesize?: number,\r\n  createImageThumbnails?: boolean,\r\n\r\n  dictFileSizeUnits?: any,\r\n\r\n  dictDefaultMessage?: string,\r\n  dictFallbackMessage?: string,\r\n\r\n  dictFileTooBig?: string,\r\n  dictResponseError?: string,\r\n  dictInvalidFileType?: string,\r\n\r\n  dictRemoveFile?: string,\r\n  dictCancelUpload?: string,\r\n  dictFallbackText?: string,\r\n  dictMaxFilesExceeded?: string,\r\n  dictRemoveFileConfirmation?: string,\r\n  dictCancelUploadConfirmation?: string\r\n}\r\n\r\nexport class DropzoneConfig implements DropzoneConfigInterface {\r\n  timeout: number;\r\n\r\n  autoReset: number;\r\n  errorReset: number;\r\n  cancelReset: number;\r\n\r\n  url: string;\r\n  method: string;\r\n\r\n  params: Object;\r\n  headers: Object;\r\n\r\n  init: any;\r\n  accept: any;\r\n  resize: any;\r\n  fallback: any;\r\n  renameFile: any;\r\n  transformFile: any;\r\n\r\n  withCredentials: boolean;\r\n\r\n  previewsContainer: any;\r\n  hiddenInputContainer: any;\r\n\r\n  clickable: string | string[] | boolean;\r\n  paramName: string;\r\n  capture: string;\r\n  maxFiles: number;\r\n  maxFilesize: number;\r\n  filesizeBase: number;\r\n  acceptedFiles: string;\r\n  forceFallback: boolean;\r\n  addRemoveLinks: boolean;\r\n  uploadMultiple: boolean;\r\n  parallelUploads: number;\r\n  resizeWidth: number;\r\n  resizeHeight: number;\r\n  resizeMethod: string;\r\n  resizeQuality: number;\r\n  resizeMimeType: string;\r\n  thumbnailWidth: number;\r\n  thumbnailHeight: number;\r\n  thumbnailMethod: string;\r\n  previewTemplate: string;\r\n  autoQueue: boolean;\r\n  autoProcessQueue: boolean;\r\n  ignoreHiddenFiles: boolean;\r\n  maxThumbnailFilesize: number;\r\n  createImageThumbnails: boolean;\r\n\r\n  dictFileSizeUnits: any;\r\n\r\n  dictDefaultMessage: string;\r\n  dictFallbackMessage: string;\r\n\r\n  dictFileTooBig: string;\r\n  dictResponseError: string;\r\n  dictInvalidFileType: string;\r\n\r\n  dictRemoveFile: string;\r\n  dictCancelUpload: string;\r\n  dictFallbackText: string;\r\n  dictMaxFilesExceeded: string;\r\n  dictRemoveFileConfirmation: string;\r\n  dictCancelUploadConfirmation: string;\r\n\r\n  constructor(config: DropzoneConfigInterface = {}) {\r\n    this.assign(config);\r\n  }\r\n\r\n  public assign(config: DropzoneConfigInterface = {}) {\r\n    for (const key in config) {\r\n      this[key] = config[key];\r\n    }\r\n  }\r\n}\r\n"]}